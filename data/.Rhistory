#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
#group_by(trial_type, factors) %>%
#count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor)
#group_by(trial_type, factors) %>%
#count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
group_by(trial_type, factors)
#count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
group_by(trial_type, factors)
#count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
group_by(trial_type, factors)
count(factors)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
group_by(trial_type, factors)  %>%
count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(trial_type, factors)  %>%
count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
#group_by(trial_type, factors)  %>%
#count(factors)
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
group_by(trial_type, factors)  %>%
tally()
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
data %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
data %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
data %>%
group_by(factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
data %>%
group_by(factors,trial_type)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) #%>%
#group_by(trial_type, factors)  %>%
#tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(Subject_ID, trial_type, factors)  %>%
#tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(Subject_ID, trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor) %>%
group_by(trial_type, factors)  %>%
tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
glimpse(data)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
#%>%
#group_by(trial_type, factors)  %>%
#tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
with(data, as.data.frame(table(trial_type, factors)))
with(data, as.data.frame(table(trial_type, factors)),. by_group =TRUE)
?table
with(data, as.data.frame(table(trial_type, factors)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
setwd("../data/")
raw_data = read_excel("plinkopilot_2019fall.xlsx", sheet = "trials_v2.5")
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) %>%
modify_if(is.character, as.factor) %>%
modify_if(is.double, as.factor)
#%>%
#group_by(trial_type, factors)  %>%
#tally()
#rename(count =n) %>%
#arrange(desc(count), .by_group =TRUE)
data
#with(data, as.data.frame(table(trial_type, factors)))
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
library(plyr)
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
library(plyr)
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
ggplot(data, aes(fill=factor(factors), y=count, x=trial_type))+
geom_bar(position = 'stack',stat = 'identity') +
#shrink x=axis text
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
#change legend name
guides(fill=guide_legend(title="Correctness"))
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data %>%
rename(count =n) #%>%
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data %>%
rename(count =V1) #%>%
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
#data %>%
#rename(count =V1) #%>%
#arrange(desc(count), .by_group =TRUE)
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(count =V1) #%>%
View(data)
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(count = V1)
data$V1
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(count = V1)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
?rename()
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")
#arrange(desc(count), .by_group =TRUE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count"))
#arrange(desc(count), .by_group =TRUE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) %>%
arrange(desc(count), .by_group =TRUE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) %>%
arrange(desc(count), .by_group =TRUE)
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
ggplot(data, aes(fill=factor(factors), y=count, x=trial_type))+
geom_bar(position = 'stack',stat = 'identity') +
#shrink x=axis text
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
#change legend name
guides(fill=guide_legend(title="Correctness"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
setwd("../data/")
raw_data = read_excel("plinkopilot_2019fall.xlsx", sheet = "trials_v2.5")
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "c")) #%>%
#arrange(desc(count), .by_group =TRUE)
ggplot(data, aes(fill=factor(factors), y=c, x=trial_type))+
geom_bar(position = 'stack',stat = 'identity') +
#shrink x=axis text
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
#change legend name
guides(fill=guide_legend(title="Correctness"))
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
setwd("../data/")
raw_data = read_excel("plinkopilot_2019fall.xlsx", sheet = "trials_v2.5")
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
setwd("../data/")
raw_data = read_excel("plinkopilot_2019fall.xlsx", sheet = "trials_v2.5")
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
library(tidyverse)
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
library(tidyverse)
data %>%
rename(replace = c("V1" = "count")) %>%
arrange(desc(count), .by_group =TRUE)
library(tidyverse)
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
setwd("../data/")
raw_data = read_excel("plinkopilot_2019fall.xlsx", sheet = "trials_v2.5")
data <- raw_data %>%
select(Subject_ID, trial_type, answer,factors) #%>%
#group_by(trial_type, factors)  %>%
#tally()
data
#import this library to use ddply
library(plyr)
#summarizing the data, preserving zero-length groups such as
# 0 0 in no_occluder, occluder_1, and occluder_2.
# 0 0 means: 0 count in 0 (inccorect answer category)->  no one answered incorrectly in these practice trials.
data <- ddply(data, .(trial_type, factors), nrow, .drop=FALSE)
data
data %>%
rename(replace = c("V1" = "count")) #%>%
#arrange(desc(count), .by_group =TRUE)
ggplot(data, aes(fill=factor(factors), y=count, x=trial_type))+
geom_bar(position = 'stack',stat = 'identity') +
#shrink x=axis text
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
#change legend name
guides(fill=guide_legend(title="Correctness"))
